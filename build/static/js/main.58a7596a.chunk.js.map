{"version":3,"sources":["components/CreateKettleModal.js","components/ImageDropper.js","components/Images.js","main.js","components/config.js","index.js"],"names":["CreateKettleModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newName","buttonDisabled","event","setState","target","value","length","firebase","database","ref","set","content","_this2","once","snapshot","exists","cancel","createKettle","updateKettle","_this3","react_default","a","createElement","modal","title","visible","onOk","onSubmit","onCancel","okButtonProps","disabled","input","placeholder","onChange","Component","dropzone","position","border","width","maxWidth","padding","textAlign","cursor","activeDropzone","boxShadow","imageDropper","files","concat","map","file","handleUpload","style","display","justifyContent","es","accept","onDrop","bind","activeStyle","Wrapper","styled","div","_templateObject","Container","_templateObject2","StyledButton","Button","_templateObject3","Images","images","image","index","Images_Image","delete","deleteImage","Image","hover","href","downloadURL","onMouseOut","onMouseEnter","key","src","alt","name","height","onClick","Search","Input","FormItem","Form","Item","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","storage","storageRef","kettlesRef","child","Kettle","currentKettle","showModal","searchedKettle","error","allKettles","handleChange","assertThisInitialized","hideModal","updateContent","onKeyPress","window","location","pathname","kettle","slice","getKettle","getAllKettles","addEventListener","e","deferredPrompt","which","preventDefault","on","keys","val","_this4","then","replace","remove","notify","_this5","hasChild","history","push","values","_this6","update","contentRef","newKettleName","_this7","blob","Blob","type","put","metadata","size","timeCreated","contentType","good","notification","open","message","description","_this8","menu","es_menu","userSelect","fontSize","marginTop","icon","es_button","margin","className","dropdown","overlay","trigger","enterButton","onSearch","borderRadius","autoFocus","color","TextArea","ImageDropper_imageDropper","Images_Images","CreateKettleModal_CreateKettleModal","PureComponent","withRouter","ReactDOM","render","BrowserRouter","main","document","getElementById"],"mappings":"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","file":"static/js/main.58a7596a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Input } from 'antd'\nimport firebase from 'firebase'\n\nexport default class CreateKettleModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      newName: '',\n      buttonDisabled: true\n    }\n  }\n\n  onChange (event) {\n    this.setState({ newName: event.target.value })\n    if ((event.target.value).length > 0) {\n      this.setState({ buttonDisabled: false })\n    }\n  }\n\n  createKettle () {\n    firebase.database().ref('/kettles/' + this.state.newName).set({\n      content: 'Welcome to your new Kettle!'\n    })\n  }\n\n  onSubmit () {\n    // check if kettle exists previously\n    const kettle = firebase.database().ref('kettles/' + this.state.newName)\n    kettle.once('value', snapshot => {\n      if (!snapshot.exists()) {\n        this.createKettle()\n        this.props.updateKettle(this.state.newName)\n        this.props.cancel()\n      } else {\n        this.props.cancel()\n      }\n    })\n  }\n\n  render () {\n    return (\n      <Modal\n        title=\"New Kettle\"\n        visible={this.props.visible}\n        onOk={() => this.onSubmit()}\n        onCancel={() => this.props.cancel()}\n        okButtonProps={{disabled: this.state.buttonDisabled}}\n      >\n        <div>\n      Remember, anybody can access your Kettle if they have the name, so if you want to keep it secret, make the name unique.\n        </div>\n        <Input\n          placeholder=\"Kettle Name...\"\n          onChange={(event) => this.onChange(event)}\n        />\n      </Modal>\n    )\n  }\n}\n","import React, { Component } from 'react'\n// import styled from 'styled-components'\nimport Dropzone from 'react-dropzone'\n\nconst dropzone = {\n  position: 'relative',\n  border: '1px solid lightgray',\n  width: '100%',\n  maxWidth: '900px',\n  padding: '20px',\n  textAlign: 'center',\n  cursor: 'pointer'\n}\n\nconst activeDropzone = {\n  border: 'none',\n  boxShadow: 'lightgreen 0px 0px 8px 2px'\n}\n\nexport default class imageDropper extends Component {\n  constructor () {\n    super()\n    this.state = {\n      files: []\n    }\n  }\n\n  onDrop (files) {\n    this.setState({\n      files: this.state.files.length > 0 ? this.state.files.concat(files.map(file => ({\n        file\n      }))) : files.map(file => ({\n        file\n      }))\n    })\n\n    this.props.handleUpload(files)\n  }\n\n  render () {\n    return (\n      <section>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <Dropzone\n            accept=\"image/*\"\n            onDrop={this.onDrop.bind(this)}\n            style={dropzone}\n            activeStyle={activeDropzone}\n          >\n          Ways to upload: <br />\n          1. Drag and drop <br />\n          2. Click here to open file explorer\n          </Dropzone>\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'antd'\n\nconst Wrapper = styled.div`\n//  max-width: 900px;\n margin: 30px auto;\n display: flex;\n flex-direction: row;\n flex-wrap: wrap;\n`\n\nconst Container = styled.div`\nmargin: 30px 10px;\nobject-fit: contain;\ndisplay: flex;\nalign-items: center;\nflex-direction: column;\n\nimg {\n    border: 1px solid black;\n}\n`\n\nconst StyledButton = styled(Button)`\nmargin-top: -13%;\n`\n\nexport default class Images extends Component {\n  render () {\n    const { images } = this.props\n    return (\n      <Wrapper>\n        {images.length > 0 && images.map((image, index) => {\n          return <Image image={image} index={index} delete={this.props.deleteImage} />\n        })}\n      </Wrapper>\n    )\n  }\n}\n\nclass Image extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hover: false }\n  }\n  render () {\n    return (\n      <Container><a target=\"_blank\" href={this.props.image.downloadURL}><img onMouseOut={() => this.setState({hover: false})} onMouseEnter={() => this.setState({hover: true})} key={this.props.image.downloadURL} src={this.props.image.downloadURL} alt={this.props.image.name} height=\"auto\" width=\"300\" /></a> { this.state.hover && <StyledButton onMouseEnter={() => this.setState({ hover: true })} onClick={() => this.props.delete(this.props.index)}>Delete</StyledButton>}</Container>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport * as firebase from 'firebase'\nimport { config } from './components/config'\nimport { withRouter } from 'react-router'\n\nimport {\n  Input, Button, Form, Icon, Menu, Dropdown, notification\n} from 'antd'\n\nimport CreateKettleModal from './components/CreateKettleModal'\nimport ImageDropper from './components/ImageDropper'\nimport Images from './components/Images'\n\nconst Search = Input.Search\nconst FormItem = Form.Item\n\n// Initialize Firebase\nfirebase.initializeApp(config)\n\nconst storage = firebase.storage()\nconst database = firebase.database()\nconst storageRef = storage.ref()\nconst kettlesRef = storageRef.child('kettles/')\n\nclass Kettle extends PureComponent {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      value: '',\n      currentKettle: '',\n      content: '',\n      showModal: false,\n      searchedKettle: '',\n      error: false,\n      allKettles: [],\n      images: []\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.updateKettle = this.updateKettle.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n    this.updateContent = this.updateContent.bind(this)\n    this.onKeyPress = this.onKeyPress.bind(this)\n    this.handleUpload = this.handleUpload.bind(this)\n    this.deleteImage = this.deleteImage.bind(this)\n  }\n\n  componentDidMount () {\n    if (window.location.pathname.length > 1) {\n      const kettle = window.location.pathname.slice(1)\n      this.getKettle(kettle)\n    }\n    this.getAllKettles()\n\n    window.addEventListener('beforeinstallprompts', (e) => {\n      this.setState({deferredPrompt: e})\n    })\n  }\n\n  showModal () {\n    this.setState({ showModal: true })\n  }\n\n  hideModal () {\n    this.setState({ showModal: false })\n  }\n\n  handleChange (event) {\n    this.setState({ searchedKettle: event.target.value })\n  }\n\n  onKeyPress (event) {\n    if (event.which === 13) {\n      event.preventDefault()\n      this.getKettle(this.state.searchedKettle)\n    }\n  }\n\n  getAllKettles () {\n    const checkRef = database.ref('kettles')\n    checkRef.on('value', (snapshot) => {\n      this.setState({ allKettles: Object.keys(snapshot.val() || []) })\n    })\n  }\n\n  deleteImage (index) {\n    const name = this.state.images[index].name\n    const ref = storageRef.child(`kettles/${this.state.currentKettle}/${name}`)\n\n    ref.delete().then(() => {\n      database.ref(`kettles/${this.state.currentKettle}/images/${name.replace(/\\./g, '')}`).remove().then(() => {\n        this.notify(false)\n      })\n    })\n  }\n\n  getKettle (kettle) {\n    const ref = firebase\n      .database()\n      .ref(`kettles/${kettle}/`)\n\n    const checkRef = database.ref('kettles/') // Checks if the searched Kettle exists\n    checkRef.on('value', (snapshot) => {\n      if (!snapshot.hasChild(kettle)) {\n        this.setState({ currentKettle: '', error: true })\n      } else {\n        this.props.history.push(`/${kettle}`)\n        ref.on('value', (snapshot) => {\n          this.setState({ currentKettle: kettle,\n            content: snapshot.val().content || '',\n            images: snapshot.val().images ? Object.values(snapshot.val().images) : [],\n            error: false })\n        })\n      }\n    })\n  }\n\n  updateContent (e) {\n    database.ref(`kettles/${this.state.currentKettle}/`).update({\n      content: e.target.value\n    })\n    const contentRef = firebase\n      .database()\n      .ref(`kettles/${this.state.currentKettle}/content`) // this.state.kettleTitle = kettleId;\n\n    const checkRef = database.ref('kettles/') // Checks if the searched Kettle exists\n    checkRef.on('value', (snapshot) => {\n      contentRef.on('value', (snapshot) => {\n        this.setState({ content: snapshot.val() })\n      })\n    })\n  }\n\n  updateKettle (newKettleName) {\n    this.getKettle(newKettleName)\n    this.setState({ currentKettle: newKettleName, showModal: false })\n  }\n\n  handleUpload (files) {\n    files.map((file, index) => {\n      const ref = kettlesRef.child(`${this.state.currentKettle}/${file.name}`)\n\n      let blob = new Blob([file], {type: file.type})\n\n      ref.put(blob).then(snapshot => {\n        const name = file.name.replace(/\\./g, '')\n        database.ref(`kettles/${this.state.currentKettle}/images/${name}`).set({\n          name: snapshot.metadata.name,\n          downloadURL: snapshot.downloadURL,\n          size: snapshot.metadata.size,\n          timeCreated: snapshot.metadata.timeCreated,\n          contentType: snapshot.metadata.contentType\n        })\n        this.notify(true)\n      })\n\n      return file\n    })\n  }\n\n  notify (good) {\n    notification.open({\n      message: `Image ${good ? `Uploaded` : `Deleted`}`,\n      description: good ? 'Yay! 🎉' : 'If it was a mistake, then oops 🤭'\n    })\n  }\n\n  render () {\n    const menu = (\n      <Menu>\n        {this.state.allKettles.map(kettle => {\n          return (\n            <Menu.Item onClick={() => this.getKettle(kettle)} key={kettle}>{kettle}</Menu.Item>\n          )\n        })}\n      </Menu>\n    )\n\n    return (\n      <div style={{padding: '0px 20px', userSelect: 'none'}}>\n        <div style={{ textAlign: 'center', fontSize: '24px', marginTop: '20px' }}>\n          <Icon type=\"coffee\" /> kettle | <small>{this.state.currentKettle}</small>\n        </div>\n        <Button\n          style={{\n            margin: '20px auto',\n            display: 'flex',\n            border: 'none'\n          }}\n          className=\"add-button\"\n          onClick={() => this.showModal()}\n        >\n          <Icon type=\"plus-circle\" className=\"create-icon\" />\n        </Button>\n        <form\n          onKeyPress={this.onKeyPress}\n          style={{ maxWidth: '900px', margin: '0px auto' }}\n        >\n          <Dropdown overlay={menu} trigger={['click']}>\n            <div style={{width: '100%', margin: '10px 0', textAlign: 'center'}}>Kettles <Icon type=\"down\" /></div>\n          </Dropdown>\n          <FormItem>\n            <Search\n              type=\"text\"\n              placeholder=\"Search for Kettle...\"\n              size=\"large\"\n              enterButton\n              onSearch={() => this.getKettle(this.state.searchedKettle)}\n              onChange={this.handleChange}\n              style={{borderRadius: '20px !important'}}\n              autoFocus\n              className=\"searchBar\"\n            />\n          </FormItem>\n          {this.state.error && <span style={{color: 'red'}}>Kettle does not exist.</span>}\n          <FormItem>\n            <Input.TextArea\n              value={this.state.content}\n              onChange={e => this.updateContent(e)}\n            />\n          </FormItem>\n\n        </form>\n        <ImageDropper handleUpload={this.handleUpload} />\n\n        <div />\n        <Images images={this.state.images} deleteImage={this.deleteImage} />\n        <CreateKettleModal visible={this.state.showModal} cancel={this.hideModal} updateKettle={this.updateKettle} />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Kettle)\n","export const config = {\n  apiKey: 'AIzaSyD71FqS5lCiGdJuE8UrfS4Ic_TgHsgikV4',\n  authDomain: 'kettle-84ea2.firebaseapp.com',\n  databaseURL: 'https://kettle-84ea2.firebaseio.com',\n  projectId: 'kettle-84ea2',\n  storageBucket: 'kettle-84ea2.appspot.com',\n  messagingSenderId: '850017678808'\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport './index.css'\n\nimport Kettle from './main'\n\nconst App = () => (\n  <Router>\n    <div>\n      <header />\n      <Kettle />\n    </div>\n  </Router>\n)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}